#!/usr/bin/groovy
// Jenkins job: APIServer_Pipeline

import groovy.json.JsonSlurperClassic

/*  def label = "jenkins"
 podTemplate(label: label) {
   node(label) {

       def scmVars = checkout([
               $class : 'GitSCM', */
//               branches : [[name: '*/development']],
//               doGenerateSubmoduleConfigurations: false,
//               extensions : [/*[$class: 'CleanBeforeCheckout']*/],
/*               submoduleCfg : [],
               userRemoteConfigs: [[credentialsId: 'bitbucket-jenkins', url: 'https://IlyaRogachov@bitbucket.org/michael_murzakhanov/cryptosignaller.git']]
       ])

       stage('Git clone') {
           stage('test') {
              println 'Code has been cloned current brach is: '
              println scmVars.GIT_BRANCH
           }
        }


       stage('Build') {
                 sh "pwd"
                 sh "/bin/bash mvn clean install -DskipTests=true"
            }
    }
 } */


pipeline {
    // Assign to docker slave(s) label, could also be 'any'
    agent {
        label 'jenkins'
    }

    stages {
        stage('Docker node test') {
            agent {
                docker {
                    // Set both label and image
                    label 'jenkins'
                    args '--name docker-node' // list any args
                }
            }
            steps {
                // Steps run in node:7-alpine docker container on docker slave
                sh 'node --version'
            }
        }

        stage('Docker maven test') {
            agent {
                docker {
                    // Set both label and image
                    label 'docker'
                    image 'maven:3-alpine'
                }
            }
            steps {
                // Steps run in maven:3-alpine docker container on docker slave
                sh 'mvn --version'
            }
        }
    }

